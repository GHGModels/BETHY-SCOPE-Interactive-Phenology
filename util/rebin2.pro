FUNCTION REBIN2, a, m, dim, DOUBLE = double; rebin array 'a' along dimension number 'dim' to 'm' elements; equally spaced intervals; conserves the sum over all entries; KEYWORDS:; double       perform calculaton in double precisionIF NOT KEYWORD_SET (double) THEN BEGINs = SIZE (a)IF s(0) EQ 0 OR s(0) GT 6 THEN $   Message, 'Array must have 1 to 6 dimensions.'IF N_ELEMENTS (dim) EQ 0 THEN dim = 1dim = dim > 1 < s(0)n = s(dim)nf = 1 & FOR i = 1, dim - 1 DO nf = nf * s(i)nb = 1 & FOR i = dim + 1, s(0) DO nb = nb * s(i)t = FLOAT (FLOAT(a), 0, nf, n, nb)b = FLTARR (nf, m, nb)FOR j = 0, m - 1 DO BEGIN  b(*,j,*) = 0.  i0 = FLOAT(j) * n / m  i1 = FLOAT (j + 1) * n / m  FOR i = FIX (i0), FIX (i1) < (n - 1) DO $    b(*,j,*) = b(*,j,*) + (MIN ([i1,i+1]) - MAX ([i0,i])) * t(*,i,*)ENDFORs(dim) = mCASE s(0) OF  1: RETURN, FLOAT (b, 0, s(1))  2: RETURN, FLOAT (b, 0, s(1), s(2))  3: RETURN, FLOAT (b, 0, s(1), s(2), s(3))  4: RETURN, FLOAT (b, 0, s(1), s(2), s(3), s(4))  5: RETURN, FLOAT (b, 0, s(1), s(2), s(3), s(4), s(5))  6: RETURN, FLOAT (b, 0, s(1), s(2), s(3), s(4), s(5), s(6))ENDCASEENDIF ELSE BEGINs = SIZE (a)IF s(0) EQ 0 OR s(0) GT 6 THEN $   Message, 'Array must have 1 to 6 dimensions.'IF N_ELEMENTS (dim) EQ 0 THEN dim = 1dim = dim > 1 < s(0)n = s(dim)nf = 1 & FOR i = 1, dim - 1 DO nf = nf * s(i)nb = 1 & FOR i = dim + 1, s(0) DO nb = nb * s(i)t = DOUBLE (DOUBLE(a), 0, nf, n, nb)b = DBLARR (nf, m, nb)FOR j = 0, m - 1 DO BEGIN  b(*,j,*) = 0.  i0 = DOUBLE(j) * n / m  i1 = DOUBLE (j + 1) * n / m  FOR i = FIX (i0), FIX (i1) < (n - 1) DO $    b(*,j,*) = b(*,j,*) + (MIN ([i1,i+1]) - MAX ([i0,i])) * t(*,i,*)ENDFORs(dim) = mCASE s(0) OF  1: RETURN, DOUBLE (b, 0, s(1))  2: RETURN, DOUBLE (b, 0, s(1), s(2))  3: RETURN, DOUBLE (b, 0, s(1), s(2), s(3))  4: RETURN, DOUBLE (b, 0, s(1), s(2), s(3), s(4))  5: RETURN, DOUBLE (b, 0, s(1), s(2), s(3), s(4), s(5))  6: RETURN, DOUBLE (b, 0, s(1), s(2), s(3), s(4), s(5), s(6))ENDCASEENDELSERETURN, b  END